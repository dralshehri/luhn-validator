name: Checks

on:
  workflow_call:
  push:
    branches-ignore:
      - main
      - 'releases/**'
    paths:
      - 'src/**'
      - 'tests/**'
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REQUIREMENTS_FILE: requirements-dev.txt

jobs:
  code-quality:
    name: Code quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: ${{ env.REQUIREMENTS_FILE }}
      - name: Install dependencies
        run:
          pip install -U pip && pip install -r $REQUIREMENTS_FILE && pip install
          -e .
      - name: Check imports
        run: task lint_isort
      - name: Check formatting
        run: task lint_black
      - name: Check style
        run: task lint_pylint
      - name: Check typing
        run: task lint_mypy
  python-tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: ${{ env.REQUIREMENTS_FILE }}
      - name: Install dependencies
        run:
          pip install -U pip && pip install -r $REQUIREMENTS_FILE && pip install
          -e .
      - name: Run tests
        run: task test_all
  code-coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: ${{ env.REQUIREMENTS_FILE }}
      - name: Install dependencies
        run:
          pip install -U pip && pip install -r $REQUIREMENTS_FILE && pip install
          -e .
      - name: Generate report
        run: task test_cov
